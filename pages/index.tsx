import Head from 'next/head'
import { useState } from 'react';
import {Flex, Box, Stack,Text, Button, Spacer,Checkbox,Center,IconButton,InputLeftElement,Input,InputGroup} from '@chakra-ui/react'
import { SearchIcon,AddIcon} from '@chakra-ui/icons'
import { request, gql } from "graphql-request";
import { useQuery } from "react-query";
const endpoint = "https://graphqlzero.almansi.me/api";
const USER_QUERY = gql`
  query{
    users {
      data{
        id
        name
        username
        email
        address{
          street
        }
        phone
        website
      }
    }
      }
`;


export default function Home() {
  const smallWidth="4%";
  const mediumWidth="12%";
  const largeWidth="15%"

const[checked,setChecked]=useState(false)
const[showInput,setShowInput]=useState(false)
const[content,setContent]=useState("")
const handleSearch=()=>{
     setShowInput(true)
}
const handleChange=(e:any)=>{
      setContent(e.target.value)
      console.log(content)
}

  const { data, isLoading, error } = useQuery("users", () => {
    return request(endpoint, USER_QUERY);
  });
  if (isLoading) return "Loading...";
  if (error) return <div>"something went wrong"</div>;

  return (
    <div >
      <Head>
        <title>React task</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
         <Flex bg="background" min-h="100vh" w="100vw" py={12}>
            <Box bg="white" w="70%" margin="auto"  rounded="md">
              <Stack align="center" p="4" isInline>
                <Text as="h1">Users</Text>
                <Spacer/>
                <Stack  align="center" isInline>
                  {showInput ?  <InputGroup>
    <InputLeftElement
      pointerEvents='none'
      children={<SearchIcon color='gray.300' />}
    />
    <Input type='text' placeholder='Search username' value={content}  onChange={handleChange}/>
  </InputGroup>
:<IconButton aria-label='Search' bg="white" icon={<SearchIcon w={5} h={5} mr="4"/>} onClick={handleSearch}/>}
                  <Button color="white" bg="button" ><AddIcon w={4} h={4} mr="2"/> New User</Button>
                </Stack>
              </Stack>
              <Flex direction="column" mb="4">
                <Flex w="100%" py="2" px="4" bg="header"  justify="space-between" flexWrap="wrap"  alignItems="center">
                  <Box w={smallWidth} ><Checkbox verticalAlign="center" isChecked={checked}   onChange={(e) => setChecked(!checked)}/></Box>
                  <Box w={mediumWidth}>Name</Box>
                  <Box w={mediumWidth}>Username</Box>
                  <Box w={largeWidth} >Email</Box>
                  <Box w={largeWidth} >Phone</Box>
                  <Box w={largeWidth} >Website</Box>
                  <Box w={largeWidth} >Address</Box>
                </Flex>


                {
                  data.users.data.map((user:any,key:number)=>{
                    return(
                      <div key={key}>
                      <Flex  w="100%"  p="4" justify="space-between" flexWrap="wrap"  alignItems="center" >
                      <Box w={smallWidth}  ><Checkbox verticalAlign="center" isChecked={checked}  isReadOnly  /></Box>
                      <Box w={mediumWidth}  >{user.name}</Box>
                      <Box w={mediumWidth}  >{user.username}</Box>
                      <Box w={largeWidth}  >{user.email}</Box>
                      <Box w={largeWidth}   >{user.phone}</Box>
                      <Box w={largeWidth}  >{user.website}</Box>
                      <Box w={largeWidth}  >{user.address.street}</Box>
                    </Flex>
                    <hr/>
                    </div>
                        )
                  })
                }
              </Flex>
            </Box>      
       </Flex>
      </main>
    </div>
  )
}
